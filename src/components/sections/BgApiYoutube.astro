<!-- Contenedor del reproductor de video de YouTube -->
<div class="hero">
    <div id="youtubeEmbed" class="hero_video" data-video-id="xwZ5ilioQio"></div>
    <div class="hero_content">
      <h1 class="hero_content_title">Saint Petersburg</h1>
      <a href="https://www.youtube.com/watch?v=xwZ5ilioQio" target="_blank" class="hero_content_play" title="Watch on YouTube">Watch on YouTube</a>
    </div>

    
<style>
    .hero,
.hero_content {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
 
  
}

.hero {
  overflow: hidden;
  background: url("https://www.saintfuckingpetersburg.com/img/drone_shot.44a2dd58.jpg")
    no-repeat 50% fixed;
  background-size: cover;
}

.hero_video,
.hero iframe {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100vw;
  height: 56.25vw; /* 9/16*100 = 56.25 */
  min-height: 100vh;
  min-width: 177.77vh; /* 16/9*100 = 177.77 */
}

.hero iframe {
  opacity: 0;
}

.hero iframe.loaded {
  opacity: 1;
}

.hero_content {
  z-index: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.hero_content_title {
  color: #fff;
  font-family: Georgia, Times, Times New Roman, serif;
  font-size: clamp(1.5rem, 5vw, 3.25rem);
  line-height: 1.75rem;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 0.375em;
  font-weight: lighter;
  margin-bottom: 2.625rem;
}

.hero_content_play {
  display: block;
  position: relative;
  width: 4rem;
  height: 4rem;
  border: 2px solid transparent;
  border-radius: 50%;
  background: rgba(22, 22, 16, 0.75);
  text-indent: -9999px;
  transition: border-color 0.3s ease;
  animation: pulse 3s infinite;
}

.hero_content_play:hover {
  border-color: #fff;
  animation: none;
}

.hero_content_play:after {
  content: "";
  display: block;
  position: absolute;
  top: 1rem;
  left: 1.425rem;
  width: 0;
  height: 0;
  border: 0;
  border-color: transparent transparent transparent #fff;
  border-style: solid;
  border-width: 1rem 0 1rem 1.5rem;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 hsla(24, 37%, 69%, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px hsla(24, 37%, 69%, 0);
  }
  100% {
    box-shadow: 0 0 0 0 hsla(24, 37%, 69%, 0);
  }
}

    </style>    

<!-- Script TypeScript -->
<script >
/// <reference types="youtube" />


// Definir una interfaz para las opciones del reproductor de YouTube
interface YouTubePlayerOptions {
    videoId: string;
    playerVars: {
   
        autoplay: number;
        autohide: number;
        disablekb: number;
        controls: number;
        showinfo: number;
        modestbranding: number;
        loop: number;
        fs: number;
        rel: number;
        enablejsapi: number;
        start: number;
        end: number;
    };
    events: {
        onReady: (event: any) => void;
        onStateChange: (event: any) => void;
    };
}

// Obtener el elemento del reproductor de YouTube
const youtubeEmbedElement = document.getElementById("youtubeEmbed");

// Agregar el script de la API de YouTube
const tag = document.createElement("script");
tag.src = "https://www.youtube.com/iframe_api";
const firstScriptTag = document.getElementsByTagName("script")[0];
firstScriptTag?.parentNode?.insertBefore(tag, firstScriptTag);

// Definir la funci√≥n onYouTubeIframeAPIReady
(window as any).onYouTubeIframeAPIReady = function () {
    // Crear una instancia del reproductor
    const playerOptions: YouTubePlayerOptions = {
        videoId: youtubeEmbedElement?.dataset.videoId || "",
        playerVars: {
            autoplay: 1,
            autohide: 1,
            disablekb: 1,
            controls: 0,
            showinfo: 0,
            modestbranding: 0,
            loop: 1,
            fs: 0,
            rel: 0,
            enablejsapi: 1,
            start: 184,
            end: 210
        },
        events: {
            onReady: function (e: any) {
                e.target.mute();
                e.target.playVideo();
            },
            onStateChange: function (e: any) {
                if (e.data === YT.PlayerState.PLAYING) {
                    document.getElementById("youtubeEmbed")?.classList.add("loaded");
                }

                if (e.data === YT.PlayerState.ENDED) {
                    // Volver al punto de inicio
                    player.seekTo(184, true);
                }
            }
        }
    };

    const player = new YT.Player("youtubeEmbed", playerOptions);
};

</script>

